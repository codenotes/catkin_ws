  node.cpp
c:\opt\ros\melodic\x64\include\ros\message_traits.h(42): warning C4996: 'std::allocator<void>': warning STL4009: std::allocator<void> is deprecated in C++17. You can define _SILENCE_CXX17_ALLOCATOR_VOID_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0(1029): note: see declaration of 'std::allocator<void>'
c:\opt\ros\melodic\x64\include\std_msgs\header.h(58): warning C4996: 'std::allocator<void>': warning STL4009: std::allocator<void> is deprecated in C++17. You can define _SILENCE_CXX17_ALLOCATOR_VOID_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0(1029): note: see declaration of 'std::allocator<void>'
c:\opt\ros\melodic\x64\include\sensor_msgs\laserscan.h(94): warning C4996: 'std::allocator<void>': warning STL4009: std::allocator<void> is deprecated in C++17. You can define _SILENCE_CXX17_ALLOCATOR_VOID_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0(1029): note: see declaration of 'std::allocator<void>'
c:\opt\ros\melodic\x64\include\std_srvs\emptyrequest.h(45): warning C4996: 'std::allocator<void>': warning STL4009: std::allocator<void> is deprecated in C++17. You can define _SILENCE_CXX17_ALLOCATOR_VOID_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0(1029): note: see declaration of 'std::allocator<void>'
c:\opt\ros\melodic\x64\include\std_srvs\emptyresponse.h(45): warning C4996: 'std::allocator<void>': warning STL4009: std::allocator<void> is deprecated in C++17. You can define _SILENCE_CXX17_ALLOCATOR_VOID_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0(1029): note: see declaration of 'std::allocator<void>'
c:\users\gbrill\catkin_ws\src\rplidar_ros\sdk\include\rplidar_protocol.h(59): warning C4200: nonstandard extension used: zero-sized array in struct/union
  c:\users\gbrill\catkin_ws\src\rplidar_ros\sdk\include\rplidar_protocol.h(59): note: This member will be ignored by a defaulted constructor or copy/move assignment operator
c:\users\gbrill\catkin_ws\src\rplidar_ros\sdk\include\rplidar_cmd.h(256): warning C4200: nonstandard extension used: zero-sized array in struct/union
  c:\users\gbrill\catkin_ws\src\rplidar_ros\sdk\include\rplidar_cmd.h(256): note: This member will be ignored by a defaulted constructor or copy/move assignment operator
  DLL_EXPORT not defined
c:\usr\include\gregutils\strguple.h(32): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
c:\users\gbrill\catkin_ws\src\rplidar_ros\src\node.cpp(89): warning C4305: '=': truncation from 'double' to 'sensor_msgs::LaserScan_<std::allocator<void>>::_range_min_type'
c:\users\gbrill\catkin_ws\src\rplidar_ros\src\node.cpp(398): warning C4305: 'initializing': truncation from 'double' to 'float'
c:\users\gbrill\catkin_ws\src\rplidar_ros\src\node.cpp(433): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
c:\users\gbrill\catkin_ws\src\rplidar_ros\src\node.cpp(448): warning C4305: 'initializing': truncation from 'double' to 'float'
c:\opt\ros\melodic\x64\include\ros\serialization.h(859): warning C4267: 'argument': conversion from 'size_t' to 'uint32_t', possible loss of data
  c:\opt\ros\melodic\x64\include\ros\service_callback_helper.h(176): note: see reference to function template instantiation 'void ros::serialization::deserializeMessage<T>(const ros::SerializedMessage &,M &)' being compiled
          with
          [
              T=rplidar_ros::tilterRequest,
              M=rplidar_ros::tilterRequest
          ]
  c:\opt\ros\melodic\x64\include\ros\service_callback_helper.h(171): note: while compiling class template member function 'bool ros::ServiceCallbackHelperT<ros::ServiceSpec<MReq,MRes>>::call(ros::ServiceCallbackHelperCallParams &)'
          with
          [
              MReq=rplidar_ros::tilter::Request,
              MRes=rplidar_ros::tilter::Response
          ]
  c:\opt\rosdeps\x64\include\boost-1_66\boost\smart_ptr\detail\sp_convertible.hpp(49): note: see reference to class template instantiation 'ros::ServiceCallbackHelperT<ros::ServiceSpec<MReq,MRes>>' being compiled
          with
          [
              MReq=rplidar_ros::tilter::Request,
              MRes=rplidar_ros::tilter::Response
          ]
  c:\opt\rosdeps\x64\include\boost-1_66\boost\smart_ptr\detail\sp_convertible.hpp(82): note: see reference to class template instantiation 'boost::detail::sp_convertible<Y,T>' being compiled
          with
          [
              Y=ros::ServiceCallbackHelperT<ros::ServiceSpec<rplidar_ros::tilter::Request,rplidar_ros::tilter::Response>>,
              T=ros::ServiceCallbackHelper
          ]
  c:\opt\ros\melodic\x64\include\ros\advertise_service_options.h(75): note: see reference to class template instantiation 'boost::detail::sp_enable_if_convertible<T,ros::ServiceCallbackHelper>' being compiled
          with
          [
              T=ros::ServiceCallbackHelperT<ros::ServiceSpec<rplidar_ros::tilter::Request,rplidar_ros::tilter::Response>>
          ]
  c:\opt\rosdeps\x64\include\boost-1_66\boost\smart_ptr\shared_ptr.hpp(643): note: while compiling class template member function 'boost::shared_ptr<ros::ServiceCallbackHelper>::shared_ptr(boost::shared_ptr<Y> &&,boost::detail::sp_enable_if_convertible<Y,T>::type) noexcept'
          with
          [
              T=ros::ServiceCallbackHelper
          ]
  c:\opt\ros\melodic\x64\include\ros\node_handle.h(1064): note: see reference to function template instantiation 'void ros::AdvertiseServiceOptions::init<MReq,MRes>(const std::string &,const boost::function<bool (MReq &,MRes &)> &)' being compiled
          with
          [
              MReq=rplidar_ros::tilter::Request,
              MRes=rplidar_ros::tilter::Response
          ]
  c:\users\gbrill\catkin_ws\src\rplidar_ros\src\node.cpp(334): note: see reference to function template instantiation 'ros::ServiceServer ros::NodeHandle::advertiseService<rplidar_ros::tilter::Request,rplidar_ros::tilter::Response>(const std::string &,bool (__cdecl *)(MReq &,MRes &))' being compiled
          with
          [
              MReq=rplidar_ros::tilter::Request,
              MRes=rplidar_ros::tilter::Response
          ]
  c:\opt\rosdeps\x64\include\boost-1_66\boost\bind\placeholders.hpp(54): note: see reference to class template instantiation 'boost::arg<9>' being compiled
  c:\opt\rosdeps\x64\include\boost-1_66\boost\bind\placeholders.hpp(53): note: see reference to class template instantiation 'boost::arg<8>' being compiled
  c:\opt\rosdeps\x64\include\boost-1_66\boost\bind\placeholders.hpp(52): note: see reference to class template instantiation 'boost::arg<7>' being compiled
  c:\opt\rosdeps\x64\include\boost-1_66\boost\bind\placeholders.hpp(51): note: see reference to class template instantiation 'boost::arg<6>' being compiled
  c:\opt\rosdeps\x64\include\boost-1_66\boost\bind\placeholders.hpp(50): note: see reference to class template instantiation 'boost::arg<5>' being compiled
  c:\opt\rosdeps\x64\include\boost-1_66\boost\bind\placeholders.hpp(49): note: see reference to class template instantiation 'boost::arg<4>' being compiled
  c:\opt\rosdeps\x64\include\boost-1_66\boost\bind\placeholders.hpp(48): note: see reference to class template instantiation 'boost::arg<3>' being compiled
  c:\opt\rosdeps\x64\include\boost-1_66\boost\bind\placeholders.hpp(47): note: see reference to class template instantiation 'boost::arg<2>' being compiled
  c:\opt\rosdeps\x64\include\boost-1_66\boost\bind\placeholders.hpp(46): note: see reference to class template instantiation 'boost::arg<1>' being compiled
c:\opt\ros\melodic\x64\include\ros\serialization.h(417): warning C4267: 'return': conversion from 'size_t' to 'uint32_t', possible loss of data
  c:\opt\ros\melodic\x64\include\ros\serialization.h(416): note: while compiling class template member function 'uint32_t ros::serialization::VectorSerializer<T,ContainerAllocator,void>::serializedLength(const std::vector<float,std::allocator<_Ty>> &)'
          with
          [
              T=float,
              ContainerAllocator=std::allocator<float>,
              _Ty=float
          ]
  c:\opt\ros\melodic\x64\include\ros\serialization.h(494): note: see reference to function template instantiation 'uint32_t ros::serialization::VectorSerializer<T,ContainerAllocator,void>::serializedLength(const std::vector<float,std::allocator<_Ty>> &)' being compiled
          with
          [
              T=float,
              ContainerAllocator=std::allocator<float>,
              _Ty=float
          ]
  c:\opt\ros\melodic\x64\include\ros\serialization.h(494): note: see reference to class template instantiation 'ros::serialization::VectorSerializer<T,ContainerAllocator,void>' being compiled
          with
          [
              T=float,
              ContainerAllocator=std::allocator<float>
          ]
  c:\opt\ros\melodic\x64\include\ros\serialization.h(779): note: see reference to function template instantiation 'uint32_t ros::serialization::serializationLength<float,std::allocator<_Ty>>(const std::vector<_Ty,std::allocator<_Ty>> &)' being compiled
          with
          [
              _Ty=float
          ]
  c:\opt\ros\melodic\x64\include\sensor_msgs\laserscan.h(258): note: see reference to function template instantiation 'void ros::serialization::LStream::next<std::vector<float,std::allocator<_Ty>>>(const T &)' being compiled
          with
          [
              _Ty=float,
              T=std::vector<float,std::allocator<float>>
          ]
  c:\opt\ros\melodic\x64\include\sensor_msgs\laserscan.h(262): note: see reference to function template instantiation 'void ros::serialization::Serializer<T>::allInOne<ros::serialization::LStream,const T&>(Stream &,const sensor_msgs::LaserScan_<std::allocator<void>>&)' being compiled
          with
          [
              T=sensor_msgs::LaserScan,
              Stream=ros::serialization::LStream
          ]
  c:\opt\ros\melodic\x64\include\sensor_msgs\laserscan.h(262): note: see reference to function template instantiation 'void ros::serialization::Serializer<T>::allInOne<ros::serialization::LStream,const T&>(Stream &,const sensor_msgs::LaserScan_<std::allocator<void>>&)' being compiled
          with
          [
              T=sensor_msgs::LaserScan,
              Stream=ros::serialization::LStream
          ]
  c:\opt\ros\melodic\x64\include\ros\serialization.h(172): note: see reference to function template instantiation 'uint32_t ros::serialization::Serializer<T>::serializedLength<T>(const T &)' being compiled
          with
          [
              T=sensor_msgs::LaserScan
          ]
  c:\opt\ros\melodic\x64\include\ros\serialization.h(172): note: see reference to function template instantiation 'uint32_t ros::serialization::Serializer<T>::serializedLength<T>(const T &)' being compiled
          with
          [
              T=sensor_msgs::LaserScan
          ]
  c:\opt\ros\melodic\x64\include\ros\serialization.h(808): note: see reference to function template instantiation 'uint32_t ros::serialization::serializationLength<M>(const T &)' being compiled
          with
          [
              M=sensor_msgs::LaserScan,
              T=sensor_msgs::LaserScan
          ]
  c:\opt\ros\melodic\x64\include\ros\publisher.h(118): note: see reference to function template instantiation 'ros::SerializedMessage ros::serialization::serializeMessage<M>(const M &)' being compiled
          with
          [
              M=sensor_msgs::LaserScan
          ]
  c:\users\gbrill\catkin_ws\src\rplidar_ros\src\node.cpp(117): note: see reference to function template instantiation 'void ros::Publisher::publish<sensor_msgs::LaserScan>(const M &) const' being compiled
          with
          [
              M=sensor_msgs::LaserScan
          ]
  rplidarNode.vcxproj -> C:\Users\gbrill\catkin_ws\src\rplidar_ros\x64\Release\rplidarNode.exe
          1 file(s) copied.
