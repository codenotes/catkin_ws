// Generated by gencpp from file rplidar_ros/tilter.msg
// DO NOT EDIT!


#ifndef RPLIDAR_ROS_MESSAGE_TILTER_H
#define RPLIDAR_ROS_MESSAGE_TILTER_H

#include <ros/service_traits.h>


#include <rplidar_ros/tilterRequest.h>
#include <rplidar_ros/tilterResponse.h>


namespace rplidar_ros
{

struct tilter
{

typedef tilterRequest Request;
typedef tilterResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct tilter
} // namespace rplidar_ros


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::rplidar_ros::tilter > {
  static const char* value()
  {
    return "1295ef2f98a07017591561c04a6e6c75";
  }

  static const char* value(const ::rplidar_ros::tilter&) { return value(); }
};

template<>
struct DataType< ::rplidar_ros::tilter > {
  static const char* value()
  {
    return "rplidar_ros/tilter";
  }

  static const char* value(const ::rplidar_ros::tilter&) { return value(); }
};


// service_traits::MD5Sum< ::rplidar_ros::tilterRequest> should match 
// service_traits::MD5Sum< ::rplidar_ros::tilter > 
template<>
struct MD5Sum< ::rplidar_ros::tilterRequest>
{
  static const char* value()
  {
    return MD5Sum< ::rplidar_ros::tilter >::value();
  }
  static const char* value(const ::rplidar_ros::tilterRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::rplidar_ros::tilterRequest> should match 
// service_traits::DataType< ::rplidar_ros::tilter > 
template<>
struct DataType< ::rplidar_ros::tilterRequest>
{
  static const char* value()
  {
    return DataType< ::rplidar_ros::tilter >::value();
  }
  static const char* value(const ::rplidar_ros::tilterRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::rplidar_ros::tilterResponse> should match 
// service_traits::MD5Sum< ::rplidar_ros::tilter > 
template<>
struct MD5Sum< ::rplidar_ros::tilterResponse>
{
  static const char* value()
  {
    return MD5Sum< ::rplidar_ros::tilter >::value();
  }
  static const char* value(const ::rplidar_ros::tilterResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::rplidar_ros::tilterResponse> should match 
// service_traits::DataType< ::rplidar_ros::tilter > 
template<>
struct DataType< ::rplidar_ros::tilterResponse>
{
  static const char* value()
  {
    return DataType< ::rplidar_ros::tilter >::value();
  }
  static const char* value(const ::rplidar_ros::tilterResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // RPLIDAR_ROS_MESSAGE_TILTER_H
